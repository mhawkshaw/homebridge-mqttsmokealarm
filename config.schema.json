{
  "pluginAlias": "MqttSmokeSensor",
  "pluginType": "platform",
  "singular": true,
  "headerDisplay": "Get information from Smoke Sensors that communicate over MQTT",
  "schema": {
    "type": "object",
    "properties": {
      "name": {
        "type": "string",
        "title": "Plugin name as shown in Homebridge Log",
        "default": "MqttSmokeSensor"
      },
      "mqttbroker": {
        "title": "MQTT Broker",
        "type": "string",
        "required": true,
        "format": "uri",
        "default": "mqtt://127.0.0.1:1883"
      },
      "username": {
        "title": "MQTT Broker username",
        "type": "string",
        "required": false,
        "default": ""
      },
      "password": {
        "title": "MQTT Broker password",
        "type": "string",
        "required": false,
        "default": ""
      },
      "devices": {
        "title": "Smoke Sensor Devices",
        "type": "array",
        "uniqueItems": true,
        "required": true,
        "items": {
          "title": "Devices",
          "type": "object",
          "required": true,
          "properties": {
            "displayName": {
              "title": "Smoke Sensor Name",
              "type": "string",
              "required": true,
              "default": "Smoke Sensor"
            },
            "manufacturer": {
              "title": "Smoke Sensor Manufacturer",
              "type": "string",
              "required": true,
              "default": "MQTT"
            },
            "model": {
              "title": "Smoke Sensor Model",
              "type": "string",
              "required": true,
              "default": "Smoke Sensor"
            },
            "serial": {
              "title": "Smoke Sensor Serial Number",
              "type": "string",
              "required": true,
             "default": "1234567890"
            },
            "smokeDetectedTopic": {
              "title": "Smoke Detected Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/smokedetected",
              "comment": "The topic needs to be unique to this device."
            },
            "smokeDetectedPayload": {
              "title": "Smoke Detected Payload",
              "type": "string",
              "required": false,
              "default": "1",
              "comment": "Optional. If a message is received on the topic then it is assumed smoke is detected."
            },
            "smokeNotDetectedTopic": {
              "title": "Smoke Not Detected Topic Name.",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/smokedetected",
              "comment": "If this is the same as the smoke detected topic, then the payload needs to indicate if smoke was detected or not."
            }, 
            "smokeNotDetectedPayload": {
              "title": "Smoke Not Detected Payload",
              "type": "string",
              "required": false,
              "default": "0",
              "comment": "Optional. If a message is received on the topic then it is assumed smoke is detected."
            },
            "getSmokeDetectedTopic": {
              "title": "Get Smoke Detected Topic Name.",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/getsmokedetected",
              "comment": "Used to get the status proactively from the smoke sensor. Response should be sent on the topic above."
            },
            "lowBatteryTopic": {
              "title": "Low Battery Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/batterylow",
              "comment": "The topic needs to be unique to this device."
            },
            "lowBatteryPayload": {
              "title": "Low Battery Payload.",
              "type": "string",
              "required": false,
              "default": "1",
              "comment": "Optional. If a message is received on the topic then it is assumed battery is low."
            },
            "normalBatteryTopic": {
              "title": "Normal Battery Topic Name.",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/batterylow",
              "comment": "If this is the same as the low battery topic, then the payload needs to indicate if the battery is low."
            },           
            "normalBatteryPayload": {
              "title": "Normal Battery Payload.",
              "type": "string",
              "required": false,
              "default": "0",
              "comment": "Optional. If a message is received on the topic then it is assumed battery is low."
            },
            "getLowBatteryTopic": {
              "title": "Get Low Battery Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/getbatterylow",
              "comment": "Used to get the status proactively from the smoke sensor. Response should be sent on the topic above."
            },
            "tamperedTopic": {
              "title": "Smoke Detector Tampered Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/tampered",
              "comment": "The topic needs to be unique to this device."
            },
            "tamperedPayload": {
              "title": "Smoke Detector Tampered Payload",
              "type": "string",
              "required": false,
              "default": "1",
              "comment": "Optional. If a message is received on the topic then it is assumed sensor has been tampered with."
            },
            "notTamperedTopic": {
              "title": "Smoke Detector Not Tampered Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/tampered",
              "comment": "If this is the same as the tampered topic, then the payload needs to indicate if the sensor has been tampered with or not."
            },
            "notTamperedPayload": {
              "title": "Smoke Detector Not Tampered Payload",
              "type": "string",
              "required": false,
              "default": "0",
              "comment": "Optional. If a message is received on the topic then it is assumed sensor has been tampered with."
            },
            "getTamperedTopic": {
              "title": "Get Tampered Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/gettampered",
              "comment": "Used to get the status proactively from the smoke sensor. Response should be sent on the topic above."
            },
            "faultTopic": {
              "title": "Smoke Detector Fault Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/fault",
              "comment": "The topic needs to be unique to this device."
            },
            "faultPayload": {
              "title": "Smoke Detector Fault Payload",
              "type": "string",
              "required": false,
              "default": "1",
              "comment": "Optional. If a message is received on the topic then it is assumed sensor has a fault."
            },
            "noFaultTopic": {
              "title": "Smoke Detector No Fault Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/fault",
              "comment": "If this is the same as the fault topic, then the payload needs to indicate if the sensor has a fault or not."
            },
            "noFaultPayload": {
              "title": "Smoke Detector No Fault Payload",
              "type": "string",
              "required": false,
              "default": "0",
              "comment": "Optional. If a message is received on the topic then it is assumed sensor has a fault."
            },
            "getFaultTopic": {
              "title": "Get Fault Topic Name",
              "type": "string",
              "required": true,
              "default": "ha/smokedetector/getfault",
              "comment": "Used to get the status proactively from the smoke sensor. Response should be sent on the topic above."
            }
          }
        }
      }
    }
  }
}